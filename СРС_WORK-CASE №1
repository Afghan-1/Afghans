1)
Git — це
✅ Збереження історії змін коду
✅ СпСпівпраці команди над одним проєктом
✅ РРоботи з іншими версіями проекту
✅Захист від втрати даних

Git широко використовувався в розробці програмного забезпечення, особливо для спільної роботи на платформах, таких як GitHub, GitLab, Bitbucket .
Основні дії та команди в Git
1. Ініціалізація репозиторію
Створює локальний репозиторій у папці проекту:
git init
2. Клонування існуючого репозиторію
Завантажує проект із віддалення
git clone <url>
3. Додавання змін до індексу (майданчик)
Позначає змінені файли для наступного коміту:
git add <файл>      # Додати конкретний файл
git add .           # Додати всі зміни
4. Фіксація змін (створення комітету)
Зберігає зміни в історії репозиторію:
git commit -m "Опис змін"
5. Перегляд статусу репозиторію
Показує змінені файли та статус змін:
git status
6. Перегляд історії комітів
git log
7. Створення та перемикання між гілками
git branch <ім'я_гілки>   # Створити нову гілку
git checkout <ім'я_гілки> # Перемикання на іншу гілку
git checkout -b <ім'я_гілки> # Створити та переключитися на нову гілку
8. Відправка змін на віддалений сервер
git push origin <ім'я_гілки>
9. Отримання змін із віддаленого сховища
git pull origin <ім'я_гілки>
10. Об'єднання гілок
Об'єднання змін із однією гілки в іншу:
git merge <ім'я_гілки>
11. Видалення гілки
git branch -d <ім'я_гілки>   # Локально
git push origin --delete <ім'я_гілки>  # На сервері
12. Скасування змін
Відкотити зміни у файлі до останнього комітету:
git checkout -- <файл>
Скасувати останній коміт:
git reset --soft HEAD~1  # Видалити коміт, але залишити зміни
git reset --hard HEAD~1  # Видалити коміт і всі зміни
13. Робота з віддаленими репозиторіями
git remote -v
Додати нов
git remote add origin <url>

2) Комміт (commit) — це зміни в локальному репозиторії Git. Кожен комміт є знімком (моментальним знімком) стану файлів у певний момент часу, що дозволяє відстежити історію змін у проекті.
Як комітет дозволяє відслідковувати зміни?
1) Кожен комітет має власний ідентифікатор (хеш SHA-1).
Наприклад:commit 3f1e3b5b7c92a6e1f7b42c6aadb2d7f4c92e5dfb
2)Зберігається автор і час коміту
git log
3) Можна застосувати до будь-якого комітету
Якщо сталася помилка, можна відкотитися до попереднього стану: git checkout <commit_hash>
4)Можливість побачити, що змінилося між комітами
Використовується команда:git diff <commit1> <commit2> 
Це показує різницю між двома версіями файлу

Як створити комітет?
1) Додати файли в область підготовки (майданчик):
git add <ім'я_файлу>  # Додати один файл
git add .             # Додати всі змінені файли
2) Зробити комміт:git commit -m "Опис змін"
приклад:git commit -m "Додано нову функцію для авторизації"



